# shellcheck disable=SC2148,SC2155

#
# Add scripts to PATH for simpler run
#
PATH_add "$PWD/.scripts"
PATH_add "$PWD/bin"

#
# Load scripts: _logger <-- _commons <-- _dependencies
#
source "$PWD/.scripts/_dependencies.sh"

#
# Project dependencies
#
dependency bash "5.*.*" "brew install bash"
dependency direnv "2.*.*" "curl -sfL https://direnv.net/install.sh | bash"
dependency git "2.*.*" "brew install git"
dependency git-lfs "3.*.*" "brew install git-lfs"
dependency shellspec "0.28.*" "brew install shellspec"
dependency shellcheck "0.9.*" "curl -sS https://webi.sh/shellcheck | sh"
dependency shfmt "3.*.*" "curl -sS https://webi.sh/shfmt | sh"
dependency ggrep "3.*" "brew install grep"
dependency gsed "4.*" "brew install gnu-sed"
dependency timeout "9.*" "brew install coreutils"
dependency jq "1.6" "brew install jq"
dependency zsv "0.3.*-alpha" "brew tap liquidaty/zsv && brew install zsv" "version" --debug

dependency kcov "42" "brew install kcov"
dependency watchman "2023.11.*.*" "brew install watchman"

#
# Alternative Shell Formatter, that understands unit test spec files
#
export ALTSHFMT="$HOME/workspace/tmp/altshfmt/altshfmt"

#
# ask watchman to automatically update formatting of the scripts
#

# `watchman-make -p 'spec/*.sh' '**/.shellspec' --run ./00-format.sh`
watchman watch-project "$(pwd)" >/dev/null
# watchman -j <<-EOT
# ["trigger", ".", {
#   "name": "tdd-run-ebash-formatting",
#   "expression": ["anyof",
#     ["match", "*_spec.sh"],
#     ["match", "spec_helper.sh"],
#     ["match", ".shellspec"]
#   ],
#   "relative_root": ".",
#   "command": ["./00-format.sh"]
# }]
# EOT

# Short comment sample, one line
export CUSTOM_VAR="custom value"
# Short comment sample, firsr line
#
export CUSTOM_VAR="custom value"
#
# Short comment sample, second line
export CUSTOM_VAR="custom value"
# Many lines comment sample, first line
#
#
# Many lines comment sample, last line
export CUSTOM_VAR="custom value"
export CUSTOM_MISSED="no comments"
